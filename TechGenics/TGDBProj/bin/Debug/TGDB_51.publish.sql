/*
Deployment script for TGDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "TGDB"
:setvar DefaultFilePrefix "TGDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[FK_tblTask_tblProject]...';


GO
ALTER TABLE [dbo].[tblTask] DROP CONSTRAINT [FK_tblTask_tblProject];


GO
PRINT N'Dropping [dbo].[FK_tblTask_tblUser]...';


GO
ALTER TABLE [dbo].[tblTask] DROP CONSTRAINT [FK_tblTask_tblUser];


GO
PRINT N'Starting rebuilding table [dbo].[tblTask]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_tblTask] (
    [TaskId]          INT          IDENTITY (1, 1) NOT NULL,
    [TaskName]        VARCHAR (50) NOT NULL,
    [TaskDescription] VARCHAR (50) NOT NULL,
    [TaskProgress]    VARCHAR (50) NOT NULL,
    [TaskAssignedTo]  VARCHAR (50) NOT NULL,
    [ProjectName]     VARCHAR (50) NOT NULL,
    [UserId]          INT          NOT NULL,
    [ProjectId]       INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([TaskId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[tblTask])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblTask] ON;
        INSERT INTO [dbo].[tmp_ms_xx_tblTask] ([TaskId], [TaskName], [TaskDescription], [TaskProgress], [TaskAssignedTo], [ProjectName], [UserId], [ProjectId])
        SELECT   [TaskId],
                 [TaskName],
                 [TaskDescription],
                 [TaskProgress],
                 [TaskAssignedTo],
                 [ProjectName],
                 [UserId],
                 [ProjectId]
        FROM     [dbo].[tblTask]
        ORDER BY [TaskId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_tblTask] OFF;
    END

DROP TABLE [dbo].[tblTask];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_tblTask]', N'tblTask';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_tblTask_tblProject]...';


GO
ALTER TABLE [dbo].[tblTask] WITH NOCHECK
    ADD CONSTRAINT [FK_tblTask_tblProject] FOREIGN KEY ([ProjectId]) REFERENCES [dbo].[tblProject] ([ProjectId]);


GO
PRINT N'Creating [dbo].[FK_tblTask_tblUser]...';


GO
ALTER TABLE [dbo].[tblTask] WITH NOCHECK
    ADD CONSTRAINT [FK_tblTask_tblUser] FOREIGN KEY ([UserId]) REFERENCES [dbo].[tblUser] ([UserId]);


GO
PRINT N'Refreshing [dbo].[spDeleteTaskRecord]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spDeleteTaskRecord]';


GO
PRINT N'Refreshing [dbo].[spProjectR2]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spProjectR2]';


GO
PRINT N'Refreshing [dbo].[spTaskC1]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spTaskC1]';


GO
PRINT N'Refreshing [dbo].[spTaskR1]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spTaskR1]';


GO
PRINT N'Refreshing [dbo].[spUpdateTaskRecord]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spUpdateTaskRecord]';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[tblTask] WITH CHECK CHECK CONSTRAINT [FK_tblTask_tblProject];

ALTER TABLE [dbo].[tblTask] WITH CHECK CHECK CONSTRAINT [FK_tblTask_tblUser];


GO
PRINT N'Update complete.';


GO
