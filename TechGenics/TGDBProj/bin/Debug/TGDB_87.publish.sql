/*
Deployment script for TGDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "TGDB"
:setvar DefaultFilePrefix "TGDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
PRINT N'Altering [dbo].[spProjectR2]...';


GO
ALTER PROCEDURE [dbo].[spProjectR2]
/*
** Purpose : Gets list of all logged in users projects and tasks based on phase user belongs to
** Created By :	Ruan
** Created On :	18 Oct 2020
*/
@CurrentUser VARCHAR(50),
@Initiation Bit = 0,
@Planning Bit = 0,
@Execution Bit = 0,
@CloseOut Bit = 0

AS

BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
	SELECT 
		P.ProjectId,
		P.ProjectName,
		P.ProjectPhase,
		P.ProjectStatus,
		P.DocumentLocation,
		T.TaskId,
		T.TaskName,
		T.TaskDescription,
		T.TaskProgress,
		T.TaskAssignedTo,  
		T.TaskStatus,
		U.UserId,
		U.UserName
	INTO #FilterByUser
	FROM 
		tblProject P
		LEFT JOIN tblTask T ON T.ProjectId = P.ProjectId
		LEFT JOIN tblUser U ON T.UserId = U.UserId
		
	WHERE 
			(@CurrentUser IS NULL OR T.TaskAssignedTo  = @CurrentUser)

		
	SELECT * FROM #FilterByUser
	WHERE 
		ProjectPhase LIKE 
		 CASE 
			WHEN @Initiation = 1 THEN 
			'Initiation'			
			END
		OR ProjectPhase LIKE 
		 CASE 			
			WHEN @Planning = 1 THEN 
			'Planning'			
			END
		OR ProjectPhase LIKE 
		 CASE 
			WHEN @Execution = 1 THEN 
			'Execution'
			END
		OR ProjectPhase LIKE 
		 CASE 
			WHEN @CloseOut = 1 THEN 
			'CloseOUt'
			END			
END
GO
PRINT N'Update complete.';


GO
